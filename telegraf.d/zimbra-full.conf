[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = "/var/log/telegraf/telegraf.log"
  hostname = ""
  omit_hostname = false

### ADD YOUR INFLUXDB2 OUTPUT HERE ######
#[[outputs.influxdb_v2]]
#  urls = ["http://your-host.local:8086"]
#  token = "Your-API-TOKEN"
#  organization = "YOUR-GROUP"
#  bucket = "Zimbra"

### PERFORMANCE USAGE MONITORING ####
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
[[inputs.diskio]]
[[inputs.mem]]
[[inputs.net]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]
[[inputs.procstat]]
  exe = "memcached"
  prefix = "memcached"
[[inputs.procstat]]
  exe = "java"
  prefix = "java"
[[inputs.procstat]]
  exe = "mysqld"
  prefix = "mysqld"
[[inputs.procstat]]
  exe = "slapd"
  prefix = "slapd"
[[inputs.procstat]]
  exe = "nginx"
  prefix = "nginx"

### SERVICE MONITORING ###
[[inputs.fail2ban]]
  use_sudo = true
  interval = "5m"
[[inputs.postfix]]
  queue_directory = "/opt/zimbra/data/postfix/spool"
  interval = "1s"
  
### ZIMBRA MONITORING SCRIPTS #####
[[inputs.exec]]
  commands = ["/etc/telegraf/script/zimbra-scripts.sh"]
  data_format = "influx"
  timeout = "10m"
  interval = "10m"

[[inputs.exec]]
  commands = ["/etc/telegraf/script/zimbra-logsum.sh"]
  data_format = "influx"

### ZIMBRA LOGS MONITORING #####
[[inputs.tail]]
  files = ["/var/log/fail2ban.log"]
  from_beginning = false
  data_format = "grok"
  watch_method = "poll"
  character_encoding = "utf-8"
  grok_patterns = ['%{GREEDYDATA:fail2ban} \[%{GREEDYDATA:criteria}\]: %{GREEDYDATA:loglevel} \[%{GREEDYDATA:jail}\] %{GREEDYDATA:status} %{IP:sourceip}']
  name_override = "zimbra_logs"
  tags = {logname=fail2ban}

[[inputs.tail]]
  files = ["/var/log/zimbra.log"]
  from_beginning = false
  data_format = "grok"
  watch_method = "poll"
  character_encoding = "utf-8"
  grok_patterns = ['%{GREEDYDATA:time} %{GREEDYDATA:host} postfix/smtp(?:\[%{POSINT}\])?: %{GREEDYDATA:queueid}: to=<%{GREEDYDATA:to}>, relay=%{GREEDYDATA:domainrelay}?:%{NUMBER:relayport}, delay=%{NUMBER:delay:float}, delays=%{GREEDYDATA:delays}, dsn=%{GREEDYDATA:dsn}, status=%{GREEDYDATA:status} \(%{GREEDYDATA:message}: %{GREEDYDATA:message2}\)']
  name_override = "zimbra_logs"
  tags = {logname=sent}

[[inputs.tail]]
  files = ["/var/log/zimbra.log"]
  from_beginning = false
  data_format = "grok"
  watch_method = "poll"
  character_encoding = "utf-8"
  grok_patterns = ['%{GREEDYDATA:time} %{GREEDYDATA:host} postfix/lmtp(?:\[%{POSINT}\])?: %{GREEDYDATA:queueid}: to=<%{GREEDYDATA:to}>, relay=%{GREEDYDATA:domainrelay}?:%{NUMBER:relayport}, delay=%{NUMBER:delay:float}, delays=%{GREEDYDATA:delays}, dsn=%{GREEDYDATA:dsn}, status=%{GREEDYDATA:status} \(%{GREEDYDATA:message}\)']
  name_override = "zimbra_logs"
  tags = {logname=receive}

[[inputs.tail]]
  files = ["/var/log/zimbra.log"]
  from_beginning = false
  data_format = "grok"
  watch_method = "poll"
  character_encoding = "utf-8"
  grok_patterns = ['%{GREEDYDATA:time} %{GREEDYDATA:host} postfix/qmgr(?:\[%{POSINT}\])?: %{GREEDYDATA:queueid}: from=<%{GREEDYDATA:from}>, size=%{NUMBER:size}, nrcpt=%{NUMBER:nrcpt:float}']
  name_override = "zimbra_logs"
  tags = {logname=queue}

[[inputs.tail]]
  files = ["/var/log/zimbra.log"]
  from_beginning = false
  data_format = "grok"
  watch_method = "poll"
  character_encoding = "utf-8"
  grok_patterns = ['%{GREEDYDATA:time} %{GREEDYDATA:host} postfix/smtpd\[%{POSINT}\]: NOQUEUE: reject: RCPT from %{GREEDYDATA:fqdn} ?\[%{IP:ipaddress}\]: ?%{NUMBER:dsn} ?%{GREEDYDATA:messages}?']
  name_override = "zimbra_logs"
  tags = {logname=reject}

[[inputs.tail]]
  files = ["/var/log/zimbra.log"]
  from_beginning = false
  data_format = "grok"
  watch_method = "poll"
  character_encoding = "utf-8"
  grok_patterns = ['%{GREEDYDATA:time} %{GREEDYDATA:host} postfix/smtp(?:\[%{POSINT}\])?: %{GREEDYDATA:queueid}: to=<%{GREEDYDATA:to}>, relay=%{GREEDYDATA:domainrelay}?:%{NUMBER:relayport}, delay=%{NUMBER:delay:float}, delays=%{GREEDYDATA:delays}, dsn=%{GREEDYDATA:dsn}, status=bounced \(%{GREEDYDATA:message}\)']
  name_override = "zimbra_logs"
  tags = {logname=bounced}

[[inputs.tail]]
  files = ["/var/log/zimbra.log"]
  from_beginning = false
  data_format = "grok"
  watch_method = "poll"
  character_encoding = "utf-8"
  grok_patterns = ['%{GREEDYDATA:time} %{GREEDYDATA:host} postfix/smtp(?:\[%{POSINT}\])?: %{GREEDYDATA:queueid}: to=<%{GREEDYDATA:to}>, relay=%{GREEDYDATA:relay}, delay=%{NUMBER:delay:float}, delays=%{GREEDYDATA:delays}, dsn=%{GREEDYDATA:dsn}, status=deferred \(%{GREEDYDATA:message}\)']
  name_override = "zimbra_logs"
  tags = {logname=deferred}

#Authentication Log
[[inputs.tail]]
  files = ["/opt/zimbra/log/audit.log"]
  from_beginning = false
  data_format = "grok"
  watch_method = "poll"
  character_encoding = "utf-8"
  grok_patterns = ['%{GREEDYDATA:date} WARN  \[?%{GREEDYDATA:data1};oip=%{GREEDYDATA:source};%{GREEDYDATA:data2}; account=%{GREEDYDATA:account}; protocol=%{GREEDYDATA:protocol};?; error=%{GREEDYDATA:error}, %{GREEDYDATA:status};']
  name_override = "zimbra_logs"
  tags = {logname=auth-warn}

#PolicyD Log
[[inputs.tail]]
  files = ["/opt/zimbra/log/cbpolicyd.log"]
  from_beginning = true
  data_format = "grok"
  watch_method = "poll"
  character_encoding = "utf-8"
  grok_patterns = ['\[%{GREEDYDATA:date}\] \[%{GREEDYDATA:app}\] %{GREEDYDATA:severity}: module=%{GREEDYDATA:module}, mode=%{GREEDYDATA:mode}, host=%{GREEDYDATA:host}, helo=%{GREEDYDATA:helo}, from=%{GREEDYDATA:from}, to=%{GREEDYDATA:to}, reason=%{GREEDYDATA:reason}, policy=%{GREEDYDATA:policy}, quota=%{GREEDYDATA:quota}, limit=%{GREEDYDATA:limit}, track=%{GREEDYDATA:track}, counter=%{GREEDYDATA:counter}, quota=%{GREEDYDATA:quota2}']
  name_override = "zimbra_logs"
  tags = {logname=policyd}

